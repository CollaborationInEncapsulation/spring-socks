sock.catalog-url=http://localhost:5001
sock.payment-url=http://localhost:5002
sock.shipping-url=http://localhost:5003
sock.order-url=http://localhost:5004
sock.cart-url=http://localhost:5005
sock.user-url=http://127.0.0.1:5006
spring.application.name=shop-ui
server.port=6060
server.error.include-message=always
spring.main.lazy-initialization=true
spring.zipkin.enabled=false
spring.sleuth.sampler.rate=30
management.endpoints.web.exposure.include=info,health,prometheus,gateway
management.endpoint.health.probes.enabled=true
management.endpoints.web.base-path=/management
management.info.git.mode=full
server.compression.enabled=true
server.compression.min-response-size=1KB
spring.resources.cache.cachecontrol.max-age=1d
server.shutdown=graceful
spring.lifecycle.timeout-per-shutdown-phase=10s
spring.sleuth.web.additional-skip-pattern=/images/.*|/js/.*|/css/.*|/img/.*|/fonts/.*
spring.cloud.gateway.routes[0].id=catalog
spring.cloud.gateway.routes[0].predicates[0].name=Path
spring.cloud.gateway.routes[0].predicates[0].args.patterns[0]=/images/**
spring.cloud.gateway.routes[0].order=0
spring.cloud.gateway.routes[0].uri=${sock.catalog-url}
#spring.cloud.gateway.routes[0].filters[0]=AddResponseHeader=Cache-Control, max-age=259200

spring.security.oauth2.client.provider.ui.issuer-uri=${sock.user-url}/oauth/token
spring.security.oauth2.client.provider.ui.user-name-attribute=email
spring.security.oauth2.client.registration.ui.client-name=ui
spring.security.oauth2.client.registration.ui.client-id=ui
spring.security.oauth2.client.registration.ui.client-secret=ui
spring.security.oauth2.client.registration.ui.scope=openid,customer:read,customer:write,order:read,order:write,cart:read,cart:write,shipping:read,shipping:write,payment:auth

spring.security.oauth2.client.provider.sock.issuer-uri=${sock.user-url}/oauth/token
spring.security.oauth2.client.provider.sock.user-name-attribute=email
spring.security.oauth2.client.registration.sock.client-name=sock
spring.security.oauth2.client.registration.sock.client-id=sock
spring.security.oauth2.client.registration.sock.client-secret=sock
spring.security.oauth2.client.registration.sock.scope=catalog:read,cart:read,cart:write
spring.security.oauth2.client.registration.sock.authorization-grant-type=client_credentials